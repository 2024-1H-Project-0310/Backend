services:
  backend:
    build:
      context: .
    container_name: backend-moitda
    restart: always
    depends_on:
      - db
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://host.docker.internal:3307/moitda
      SPRING_DATASOURCE_USERNAME: ${MYSQL_USER}
      SPRING_DATASOURCE_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "8080:8080"
    volumes:
      - .:/app

  db:
    image: mysql:8.0
    container_name: mysqldb
    ports:
      - "3307:3306"
    environment:
      MYSQL_DATABASE: moitda
      MYSQL_ROOT_PASSWORD: "1234"


  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - '9090:9090'
    restart: unless-stopped
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./prometheus/data:/prometheus/data
#      - prometheus_data : /prometheus
    command:
      - '--web.enable-lifecycle'
      - '--storage.tsdb.path=/prometheus'
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    privileged: true
    networks:
      - monitoring-network
#    labels:
#      org.label-schema.group: "monitoring"

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - '3001:3000'
    restart: unless-stopped
#    environment:
#      - GF_SECURITY_ADMIN_USER=${ADMIN_USER}
#      - GF_SECURITY_ADMIN_PASSWORD=${ADMIN_PASSWORD}
#      - GF_USERS_ALLOW_SIGN_UP=false
    depends_on:
      - prometheus
      - node-exporter
    networks:
      - monitoring-network
  #    labels:
  #      org.label-schema.group: "monitoring"

  node-exporter:
    image: prom/node-exporter
    container_name: node-exporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
      - /etc/hostname:/etc/nodename
      - ./node-exporter/data:/etc/node-exporter
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--collector.textfile.directory=/etc/node-exporter/'
    ports:
      - 9100:9100
    restart: always
    deploy:
      mode: global
    networks:
      - monitoring-network
#    labels:
#      org.label-schema.group: "monitoring"
networks:
  monitoring-network:
    driver: bridge


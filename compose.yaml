services:
  backend:
    build:
      context: .
    container_name: backend-moitda
    restart: always
    depends_on:
      - db
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://host.docker.internal:3307/moitda
      SPRING_DATASOURCE_USERNAME: ${MYSQL_USER}
      SPRING_DATASOURCE_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "8080:8080"
    volumes:
      - .:/app
      - ./logs:/var/log/spring-boot

  db:
    image: mysql:8.0
    container_name: mysqldb
    ports:
      - "3307:3306"
    environment:
      MYSQL_DATABASE: moitda
      MYSQL_ROOT_PASSWORD: "1234"

  redis:
    container_name: redis
    image: redis
    restart: always
    ports:
      - "6379:6379"
#  redis_container:
#    # 사용할 이미지
#    image: redis:latest
#    # 컨테이너명
#    container_name: redis-pub-container
#    # 접근 포트 설정(컨테이너 외부:컨테이너 내부)
#    hostname: test
#    ports:
#      - 6380:6379
#    # 스토리지 마운트(볼륨) 설정
#    volumes:
#      - ./redis/data:/data
#      - ./redis/conf/redis.conf:/usr/local/conf/redis.conf
#    # 컨테이너에 docker label을 이용해서 메타데이터 추가
#    labels:
#      - "name=redis"
#      - "mode=standalone"
#    # 컨테이너 종료시 재시작 여부 설정
#    restart: always
#    command: redis-server /usr/local/conf/redis.conf

  nginx:
    image: nginx:latest
    volumes:
      - ./nginx/:/etc/nginx/ # 왼쪽이 로컬 경로, 오른쪽이 도커 컨테이너 내부 경로
    ports:
      - 80:80
    depends_on:
      - backend

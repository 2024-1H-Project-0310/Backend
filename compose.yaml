services:
  backend:
    build:
      context: .
    container_name: backend-moitda
    restart: always
    depends_on:
      - mysqldb
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://host.docker.internal:3307/moitda
      SPRING_DATASOURCE_USERNAME: ${MYSQL_USER}
      SPRING_DATASOURCE_PASSWORD: ${MYSQL_PASSWORD}
      SPRING_PROFILES_ACTIVE: prod
    ports:
      - "8080:8080"
    env_file:
      - .env
    command:
      - bash
      - -c
      - |
        ./wait-for-it.sh mysqldb:3307 -s -t 15
        java -Djava.security.egd=file:/dev/./urandom -jar /app.jar
    volumes:
      - .:/app
      - ./logs:/var/log/spring-boot

  mysqldb:
    image: mysql:8.0
    container_name: mysqldb
    ports:
      - "3307:3306"
    environment:
      MYSQL_DATABASE: moitda
      MYSQL_ROOT_PASSWORD: "1234"

  redis:
    container_name: redis
    image: redis
    restart: always
    environment:
      SPRING_REDIS_HOST: redis
      SPRING_REDIS_PORT: 6379
    ports:
      - "6379:6379"
#  redis_container:
#    # 사용할 이미지
#    image: redis:latest
#    # 컨테이너명
#    container_name: redis-pub-container
#    # 접근 포트 설정(컨테이너 외부:컨테이너 내부)
#    hostname: test
#    ports:
#      - 6380:6379
#    # 스토리지 마운트(볼륨) 설정
#    volumes:
#      - ./redis/data:/data
#      - ./redis/conf/redis.conf:/usr/local/conf/redis.conf
#    # 컨테이너에 docker label을 이용해서 메타데이터 추가
#    labels:
#      - "name=redis"
#      - "mode=standalone"
#    # 컨테이너 종료시 재시작 여부 설정
#    restart: always
#    command: redis-server /usr/local/conf/redis.conf

#  nginx:
#    image: nginx:latest
#    volumes:
#      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
#    ports:
#      - 80:80
#    depends_on:
#      - backend

#  frontend: #프론트 엔드 서비스를 만듬
#    build:
#      context: ../Moitda-Frontend #프론트 엔드 소스코드는 이 경로에 있다.
#      dockerfile: ../Moitda-Frontend/Dockerfile #빌드할때 프론트엔드 도커파일을 사용함.
#      args:
#        API_URL: "*"
#    container_name: frontend
#    ports:
#      - "3000:3000"
#    volumes:
#      - ../Moitda-Frontend:/frontend
#
#    image: run
#    tty: true